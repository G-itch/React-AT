{"ast":null,"code":"class FetchData {\n  static async getUsers() {\n    try {\n      const response = await fetch(`${this.baseURL}/users`);\n      if (!response.ok) {\n        throw new Error(`Erro ao buscar usuários: ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Erro ao buscar usuários:', error);\n      throw error;\n    }\n  }\n  static async getPostsByUserId(userId) {\n    try {\n      const response = await fetch(`${this.baseURL}/posts/?userId=${userId}`);\n      if (!response.ok) {\n        throw new Error(`Erro ao buscar posts: ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Erro ao buscar posts:', error);\n      throw error;\n    }\n  }\n  static async getCommentsByPostId(postId) {\n    try {\n      const response = await fetch(`${this.baseURL}/comments?postId=${postId}`);\n      if (!response.ok) {\n        throw new Error(`Erro ao buscar comentários: ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Erro ao buscar comentários:', error);\n      throw error;\n    }\n  }\n}\nFetchData.baseURL = 'https://jsonplaceholder.typicode.com';\nexport default FetchData;","map":{"version":3,"names":["FetchData","getUsers","response","fetch","baseURL","ok","Error","status","json","error","console","getPostsByUserId","userId","getCommentsByPostId","postId"],"sources":["C:/Users/enfur/AT/src/services/FetchData.js"],"sourcesContent":["class FetchData {\r\n  static baseURL = 'https://jsonplaceholder.typicode.com';\r\n\r\n  static async getUsers() {\r\n    try {\r\n      const response = await fetch(`${this.baseURL}/users`);\r\n      if (!response.ok) {\r\n        throw new Error(`Erro ao buscar usuários: ${response.status}`);\r\n      }\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Erro ao buscar usuários:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async getPostsByUserId(userId) {\r\n    try {\r\n      const response = await fetch(`${this.baseURL}/posts/?userId=${userId}`);\r\n      if (!response.ok) {\r\n        throw new Error(`Erro ao buscar posts: ${response.status}`);\r\n      }\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Erro ao buscar posts:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async getCommentsByPostId(postId) {\r\n    try {\r\n      const response = await fetch(`${this.baseURL}/comments?postId=${postId}`);\r\n      if (!response.ok) {\r\n        throw new Error(`Erro ao buscar comentários: ${response.status}`);\r\n      }\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Erro ao buscar comentários:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default FetchData;\r\n"],"mappings":"AAAA,MAAMA,SAAS,CAAC;EAGd,aAAaC,QAAQA,CAAA,EAAG;IACtB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG,IAAI,CAACC,OAAO,QAAQ,CAAC;MACrD,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4BJ,QAAQ,CAACK,MAAM,EAAE,CAAC;MAChE;MACA,OAAO,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMA,KAAK;IACb;EACF;EAEA,aAAaE,gBAAgBA,CAACC,MAAM,EAAE;IACpC,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG,IAAI,CAACC,OAAO,kBAAkBQ,MAAM,EAAE,CAAC;MACvE,IAAI,CAACV,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyBJ,QAAQ,CAACK,MAAM,EAAE,CAAC;MAC7D;MACA,OAAO,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACb;EACF;EAEA,aAAaI,mBAAmBA,CAACC,MAAM,EAAE;IACvC,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG,IAAI,CAACC,OAAO,oBAAoBU,MAAM,EAAE,CAAC;MACzE,IAAI,CAACZ,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,+BAA+BJ,QAAQ,CAACK,MAAM,EAAE,CAAC;MACnE;MACA,OAAO,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,MAAMA,KAAK;IACb;EACF;AACF;AAzCMT,SAAS,CACNI,OAAO,GAAG,sCAAsC;AA0CzD,eAAeJ,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}