{"ast":null,"code":"class FetchData {\n  static async getUsers() {\n    try {\n      console.log('Fazendo requisição para:', `${this.baseURL}/users`);\n      const response = await fetch(`${this.baseURL}/users`);\n      console.log('Resposta recebida:', response.status, response.statusText);\n      if (!response.ok) {\n        throw new Error(`Erro HTTP: ${response.status} - ${response.statusText}`);\n      }\n      const data = await response.json();\n      console.log('Dados recebidos:', data.length, 'usuários');\n      return data;\n    } catch (error) {\n      console.error('Erro detalhado ao buscar usuários:', error);\n      throw new Error(`Falha na requisição: ${error.message}`);\n    }\n  }\n  static async getPostsByUserId(userId) {\n    try {\n      const response = await fetch(`${this.baseURL}/posts/?userId=${userId}`);\n      if (!response.ok) {\n        throw new Error(`Erro ao buscar posts: ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Erro ao buscar posts:', error);\n      throw error;\n    }\n  }\n  static async getCommentsByPostId(postId) {\n    try {\n      const response = await fetch(`${this.baseURL}/comments?postId=${postId}`);\n      if (!response.ok) {\n        throw new Error(`Erro ao buscar comentários: ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Erro ao buscar comentários:', error);\n      throw error;\n    }\n  }\n}\nFetchData.baseURL = 'https://jsonplaceholder.typicode.com';\nexport default FetchData;","map":{"version":3,"names":["FetchData","getUsers","console","log","baseURL","response","fetch","status","statusText","ok","Error","data","json","length","error","message","getPostsByUserId","userId","getCommentsByPostId","postId"],"sources":["C:/Users/enfur/AT/src/services/FetchData.js"],"sourcesContent":["class FetchData {\r\n  static baseURL = 'https://jsonplaceholder.typicode.com';\r\n\r\n  static async getUsers() {\r\n    try {\r\n      console.log('Fazendo requisição para:', `${this.baseURL}/users`);\r\n      const response = await fetch(`${this.baseURL}/users`);\r\n      console.log('Resposta recebida:', response.status, response.statusText);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Erro HTTP: ${response.status} - ${response.statusText}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log('Dados recebidos:', data.length, 'usuários');\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Erro detalhado ao buscar usuários:', error);\r\n      throw new Error(`Falha na requisição: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  static async getPostsByUserId(userId) {\r\n    try {\r\n      const response = await fetch(`${this.baseURL}/posts/?userId=${userId}`);\r\n      if (!response.ok) {\r\n        throw new Error(`Erro ao buscar posts: ${response.status}`);\r\n      }\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Erro ao buscar posts:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static async getCommentsByPostId(postId) {\r\n    try {\r\n      const response = await fetch(`${this.baseURL}/comments?postId=${postId}`);\r\n      if (!response.ok) {\r\n        throw new Error(`Erro ao buscar comentários: ${response.status}`);\r\n      }\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Erro ao buscar comentários:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default FetchData;\r\n"],"mappings":"AAAA,MAAMA,SAAS,CAAC;EAGd,aAAaC,QAAQA,CAAA,EAAG;IACtB,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAE,GAAG,IAAI,CAACC,OAAO,QAAQ,CAAC;MAChE,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG,IAAI,CAACF,OAAO,QAAQ,CAAC;MACrDF,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEE,QAAQ,CAACE,MAAM,EAAEF,QAAQ,CAACG,UAAU,CAAC;MAEvE,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,cAAcL,QAAQ,CAACE,MAAM,MAAMF,QAAQ,CAACG,UAAU,EAAE,CAAC;MAC3E;MAEA,MAAMG,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAClCV,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEQ,IAAI,CAACE,MAAM,EAAE,UAAU,CAAC;MACxD,OAAOF,IAAI;IACb,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdZ,OAAO,CAACY,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC1D,MAAM,IAAIJ,KAAK,CAAC,wBAAwBI,KAAK,CAACC,OAAO,EAAE,CAAC;IAC1D;EACF;EAEA,aAAaC,gBAAgBA,CAACC,MAAM,EAAE;IACpC,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG,IAAI,CAACF,OAAO,kBAAkBa,MAAM,EAAE,CAAC;MACvE,IAAI,CAACZ,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyBL,QAAQ,CAACE,MAAM,EAAE,CAAC;MAC7D;MACA,OAAO,MAAMF,QAAQ,CAACO,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdZ,OAAO,CAACY,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACb;EACF;EAEA,aAAaI,mBAAmBA,CAACC,MAAM,EAAE;IACvC,IAAI;MACF,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG,IAAI,CAACF,OAAO,oBAAoBe,MAAM,EAAE,CAAC;MACzE,IAAI,CAACd,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,+BAA+BL,QAAQ,CAACE,MAAM,EAAE,CAAC;MACnE;MACA,OAAO,MAAMF,QAAQ,CAACO,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdZ,OAAO,CAACY,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,MAAMA,KAAK;IACb;EACF;AACF;AA/CMd,SAAS,CACNI,OAAO,GAAG,sCAAsC;AAgDzD,eAAeJ,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}